<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
 <title>Your Title - Tool</title>
 <link href="http://giantech.jp/tags/tool.xml" rel="self"/>
 <link href="http://giantech.jp/tag/Tool.html"/>
 <updated>2015-08-27T12:24:56+09:00</updated>
 <id>http://giantech.jp/tags/Tool.html</id>
 <author>
   <name>Author Here</name>
 </author>
 
 <entry>
   <title>Jekyll on Github に OGP/TwitterCardを対応させた</title>
   <link href="http://giantech.jp/2015/05/21/add-ogp-and-twittercard-to-jekyll-on-github"/>
   <updated>2015-05-21T00:00:00+09:00</updated>
   <id>http://giantech.jp/2015/05/21/add-ogp-and-twittercard-to-jekyll-on-github</id>
   <content type="html">&lt;p&gt;&lt;img src=&quot;/assets/images/20150521/sns.jpg&quot; alt=&quot;Eyecatch&quot;/&gt;&lt;/p&gt;

&lt;h2&gt;きっかけ&lt;/h2&gt;

&lt;p&gt;このサイトは&lt;a href=&quot;http://jekyllbootstrap.com/&quot;&gt;Jekyll Bootstrap&lt;/a&gt;ベースでテンプレートを生成した後、カスタマイズしたものをGithub Pagesに置いて公開していた。&lt;a href=&quot;http://jekyllrb.com/&quot;&gt;Jekyll&lt;/a&gt;単体では標準ではOGPに対応しておらず、プラグインもなさげだったので、OGP非対応のまま数年が過ぎていた。当初はあまり気にしていなかったが、さすがにこのままでは格好悪いよね、ということでOGP対応に取り組むことにした。&lt;/p&gt;

&lt;h2&gt;参考にしたサイト&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://kawaken.github.io/memo/2013/08/30/OGP%E3%81%AE%E8%A8%AD%E5%AE%9A%E3%81%A8%E3%81%8BSNS%E9%96%A2%E4%BF%82%E3%81%AE%E3%81%A8%E3%81%93%E3%82%8D%E4%BF%AE%E6%AD%A3%E3%81%97%E3%81%9F.html&quot;&gt;OGPの設定とかSNS関係のところ修正した&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://gist.github.com/pathawks/1406355&quot;&gt;Open Graph for Jekyll&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.agilegroup.co.jp/technote/magnolia-ogp.html&quot;&gt;WebサイトにOpen Graph Protocol (OGP) 設定を追加する&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;やったこと&lt;/h2&gt;

&lt;p&gt;上記のサイトのスニペットをベースに、トップページの場合と、各記事の場合の２パターンで、それぞれog:type、og:image、og:descriptionの内容を切り換えるように設定した。&lt;/p&gt;

&lt;p&gt;og:imageについては、アイキャッチの画像を入れている場合と、入れていない場合があるので、記事毎のメタ情報でimageタグが指定していたらその画像を、そうでない場合はサイトのロゴを表示するようにした。&lt;/p&gt;

&lt;p&gt;最初はogp.html内でif文書いてケース分けしていたが、かなり見苦しいので、各ケースをextract fileしてogp.htmlではincludeだけするようにした。&lt;/p&gt;

&lt;p&gt;ogp.html:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;&amp;lt;meta property=&amp;quot;og:type&amp;quot; content=&amp;quot;{% include ogp/type.html %}&amp;quot; /&amp;gt;
&amp;lt;meta property=&amp;quot;og:url&amp;quot; content=&amp;quot;{{ site.url }}{{ page.url }}&amp;quot; /&amp;gt;
&amp;lt;meta property=&amp;quot;og:description&amp;quot; content=&amp;quot;{% include ogp/desc.html %}&amp;quot; /&amp;gt;
&amp;lt;meta property=&amp;quot;og:site_name&amp;quot; content=&amp;quot;{{ site.title }}&amp;quot; /&amp;gt;
&amp;lt;meta property=&amp;quot;og:title&amp;quot; content=&amp;quot;{% include ogp/title.html %}&amp;quot; /&amp;gt;
&amp;lt;meta property=&amp;quot;og:image&amp;quot; content=&amp;quot;{% include ogp/image.html %}&amp;quot; /&amp;gt;
&amp;lt;meta property=&amp;quot;article:published_time&amp;quot; content=&amp;quot;{% include ogp/date.html %}&amp;quot; /&amp;gt;
&amp;lt;meta property=&amp;quot;article:author&amp;quot; content=&amp;quot;http://www.facebook.com/{{ site.author.facebook }}&amp;quot; /&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;ogp/image.html(実際には改行は含めていない):&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;{% if page.image %}
    {% capture page_image %}{{ page.image }}{% endcapture %}
{% else %}
    {% capture page_image %}{{ site.url }}/assets/logo.png&amp;quot;{% endcapture %}
{% endif %}
{{ page_image }}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;ogp/type.html(実際には改行は含めていない):&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;{% if page.title == site.title %}
    {% capture page_type %}website{% endcapture %}
{% else %}
    {% capture page_type %}article{% endcapture %}
{% endif %}
{{ page_type }}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;ついでにTwitterCard&lt;/h2&gt;

&lt;p&gt;元々はOGP対応だけしようと思っていたが、ついでにTwitterCardにも対応した。OGPのインクルードファイルを利用して以下のように記載。&lt;/p&gt;

&lt;p&gt;twittercard.html:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;&amp;lt;meta name=&amp;quot;twitter:card&amp;quot; content=&amp;quot;summary&amp;quot;&amp;gt;
&amp;lt;meta name=&amp;quot;twitter:site&amp;quot; content=&amp;quot;@kkd&amp;quot;&amp;gt;
&amp;lt;meta name=&amp;quot;twitter:title&amp;quot; content=&amp;quot;{% include ogp/title.html %}&amp;quot;&amp;gt;
&amp;lt;meta name=&amp;quot;twitter:url&amp;quot; content=&amp;quot;{{ site.url }}{{ page.url }}&amp;quot;&amp;gt;
&amp;lt;meta name=&amp;quot;twitter:description&amp;quot; content=&amp;quot;{% include ogp/desc.html  %}&amp;quot;&amp;gt;
&amp;lt;meta name=&amp;quot;twitter:image&amp;quot; content=&amp;quot;{% include ogp/image.html %}&amp;quot;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;キャッシュが残っていて困った&lt;/h2&gt;

&lt;p&gt;既にfb上で投稿した記事については、FacebookのDebuggerで確認してもOGP対応されて表示されなかったし、デバッガ上でFetch new scrape informationをしても駄目。半ば諦めていたが、POST送信によるキャッシュクリアを試してみたらクリアできたみたいで一安心。以下のサイトからできた。&lt;/p&gt;

&lt;p&gt;http://www.kagua.biz/fb/cacheclear.html&lt;/p&gt;

&lt;h2&gt;感想&lt;/h2&gt;

&lt;p&gt;もう少しスマートにできる気もするが、まぁ今の時点ではOGP対応ができればよかったので満足。&lt;/p&gt;

&lt;p&gt;og:imageの指定については、ルールを決めて「画像ファイル名=記事名」とでもすれば設定しなくてもよくなりそうな気がするが、やり過ぎ感があるので今はやめておく。&lt;/p&gt;

&lt;p&gt;しかし、こういうことをしていると、どんどん&lt;a href=&quot;https://github.com/Shopify/liquid/wiki&quot;&gt;Liquid&lt;/a&gt;を活用したくなってしまうが、こういったTemplate系の実装は黒魔術になりそうなのであまり手出しはしたくない。&lt;/p&gt;

&lt;h2&gt;おまけ&lt;/h2&gt;

&lt;p&gt;この記事にJekyllのテンプレート部分をコードブロックで埋め込んだが、どうもLiquid記法の部分がエスケープされずに置換されてしまっていたためうまく表示できなかった。&lt;/p&gt;

&lt;p&gt;LiquidでRawフォーマットで表示するには、rawタグで囲む必要があるので気をつけよう。&lt;a href=&quot;http://stackoverflow.com/questions/3426182/how-to-escape-liquid-template-tags&quot;&gt;How to escape liquid tempalte tags&lt;/a&gt;を参照のこと。&lt;/p&gt;
</content>
 </entry>
 
</feed>